https://leetcode.com/problems/longest-palindromic-substring/
class Solution {

    public String longestPalindrome(String s) {
        int i =0;
        int j = s.length()-1; 
    //Approach
    // index i = 0 then j-- till not get equal s.charAt(i);
    // if(get equal then inside while loop till they are equal if they are not then break mean they are
    // not palindrom even if one not match  )
    // then again start with j-- as more we can get equal after on like x in "xaabacxcabaaxcabaax"
    //i++ or i =1 and j = s.lenght() if i>=j  (again same steps follow untill i != s.length)

        int maxLen=0;
        int currLen =0;
        int si=0;
        int li=0;
        
       while(i<s.length()-1){
        if(i>=j){
            i++;
            j = s.length()-1;
        }
           if(s.charAt(i)==s.charAt(j)){
            int csi = i;
            int cli = j;
            int t =i;
            int t2 =j;
        while(s.charAt(t)==s.charAt(t2)){
              t++;
              t2--;
              if(t>=t2){
                 currLen = cli-csi+1;
                 if(currLen>maxLen){
                    maxLen = currLen;
                    si = csi;
                    li = cli;
                 }
                    // j--;
                    // continue;
                    break;
              }
           }
           j--;
           }
           else{
               j--;
           }
       }
       return s.substring(si,li+1);
    }
}
